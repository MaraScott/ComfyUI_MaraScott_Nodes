var R=Object.defineProperty;var D=(t,e,n)=>e in t?R(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var L=(t,e,n)=>D(t,typeof e!="symbol"?e+"":e,n);import{getGraphLinkById as I}from"./Graph.js";function U(t){var s;const e=(s=t.inputs)==null?void 0:s[g.BUS_SLOT];if(!e||e.link==null)return null;const n=I(t.graph,e.link);return n?t.graph.getNodeById(n.origin_id):null}function C(t){var s,r;const e=(s=t.outputs)==null?void 0:s[g.BUS_SLOT],n=[];if(!((r=e==null?void 0:e.links)!=null&&r.length))return n;for(const i of e.links){const a=I(t.graph,i);if(!a)continue;const c=t.graph.getNodeById(a.target_id);(c==null?void 0:c.type)===T&&n.push(c)}return n}function O(t){var s,r,i,a,c,u;const e=((r=(s=t.inputs)==null?void 0:s[g.BUS_SLOT])==null?void 0:r.link)!=null,n=((u=(c=(a=(i=t.outputs)==null?void 0:i[g.BUS_SLOT])==null?void 0:a.links)==null?void 0:c.length)!=null?u:0)>0;return!!(e||n)}function F(t){const e=new Set,n=[t],s=[];for(;n.length;){const r=n.shift();if(!r||e.has(r.id))continue;e.add(r.id),s.push(r);const i=U(r);(i==null?void 0:i.type)===T&&n.push(i);for(const a of C(r))n.push(a)}return s}function _(t){if(!O(t))return null;const e=F(t);return e.length>1?e:null}function k(t){const e=new Map(t.map(i=>[i.id,i])),n=t.filter(i=>!U(i)),s=[];function r(i,a){const c=C(i);if(!c.length||c.every(u=>!e.has(u.id))){s.push([...a,i.id]);return}for(const u of c)e.has(u.id)&&(a.includes(u.id)||r(u,[...a,i.id]))}if(n.length)for(const i of n)r(i,[]);else for(const i of t)r(i,[]);return s.map(i=>i.map(a=>e.get(a)))}const W=["Reroute (rgthree)"],v=["SetNode","GetNode"],T="MaraScottAnyBus_v2";function A(t){var n,s,r,i,a,c;if(!(t!=null&&t.graph)||getAnyBusState().__syncing)return;const e=_(t);if(e){setAnyBusState(u=>({...u,__syncing:!0}));try{const u=(s=(n=t.properties)==null?void 0:n[p.PROFILE.name])!=null?s:p.PROFILE.default,l=(i=(r=t.properties)==null?void 0:r[p.INPUTS.name])!=null?i:p.INPUTS.default;for(const o of e)p.setValue(o,p.PROFILE.name,u,!0),((a=o.properties)==null?void 0:a[p.INPUTS.name])!==l&&p.setValue(o,p.INPUTS.name,l,!0);for(const o of e)(c=o.setDirtyCanvas)==null||c.call(o,!0,!0)}finally{setAnyBusState(u=>({...u,__syncing:!1}))}}}function P(t){return typeof t=="string"&&/^\*\s*\d+/.test(t.trim())}function B(t){var r,i,a,c;if(!(t!=null&&t.graph))return;const e=_(t);if(!e)return;const n=k(e);if(!n.length)return;const s=Math.max(...e.map(u=>{var l,o;return(o=(l=u.properties)==null?void 0:l[p.INPUTS.name])!=null?o:p.INPUTS.default}));for(let u=g.FIRST_INDEX;u<=s;u++){let l=null;for(const o of n){let f=null,h=null;for(let S=0;S<o.length;S++){const y=(r=o[S].inputs)==null?void 0:r[u];if(y&&(!f&&y.type&&y.type!=="*"?(f=y.type,y.name&&!P(y.name)&&(h=y.name)):f?y.type===f&&y.name&&!P(y.name)&&y.name!==h&&(h=y.name):y.name&&!P(y.name)&&(h=h!=null?h:y.name),f&&h)){const m={type:f,label:h,depth:S};(!l||m.depth>l.depth)&&(l=m)}}}if(l)for(const o of e){const f=(i=o.inputs)==null?void 0:i[u],h=(a=o.outputs)==null?void 0:a[u];if(!f||!h)continue;f.name=l.label,(f.type==="*"||f.type===l.type)&&(f.type=l.type),h.name=f.name,(!(h.links&&h.links.length>0)||h.type===l.type||h.type==="*")&&(h.type=l.type)}}for(const u of e)(c=u.setDirtyCanvas)==null||c.call(u,!0,!0)}const p={NAMESPACE:"MaraScott",TYPE:"AnyBus_v2",BUS_SLOT:0,FIRST_INDEX:1,ALLOWED_REROUTE_TYPE:W.slice(),ALLOWED_GETSET_TYPE:v.slice(),ALLOWED_NODE_TYPE:[],PROFILE:{name:"profile",default:"default"},INPUTS:{name:"inputs",min:2,max:24,default:2},CLEAN:{name:"Clean Inputs",default:!1},init(t){var e,n;t.properties=t.properties||{},t.properties[this.PROFILE.name]=(e=t.properties[this.PROFILE.name])!=null?e:this.PROFILE.default,t.properties[this.INPUTS.name]=(n=t.properties[this.INPUTS.name])!=null?n:this.INPUTS.default,t.properties.prevProfileName=t.properties[this.PROFILE.name],t.shape=LiteGraph.CARD_SHAPE,t.color=LGraphCanvas.node_colors.green.color,t.bgcolor=LGraphCanvas.node_colors.green.bgcolor,t.groupcolor=LGraphCanvas.node_colors.green.groupcolor,t.size[0]=150,this.updateNodeTitle(t)},updateNodeTitle(t){t.title="AnyBus - "+t.properties[this.PROFILE.name]},getByName(t,e){var n;return(n=t.widgets)==null?void 0:n.find(s=>s.name===e)},setWidgetValue(t,e,n){var r;const s=this.getByName(t,e);s&&(s.value=n,(r=t.setDirtyCanvas)==null||r.call(t,!0,!0))},updateNodeIO(t){if(!t.graph)return;const e=t.properties[this.INPUTS.name],n=(t.inputs||[]).map((s,r)=>{if((s==null?void 0:s.link)!=null){const i=I(t.graph,s.link);if(i)return{idx:r,link:i}}return null}).filter(Boolean);t.inputs=[],t.outputs=[],t.addInput("bus","BUS"),t.addOutput("bus","BUS");for(let s=1;s<=e;s++){const r=`* ${s.toString().padStart(2,"0")}`.toLowerCase();t.addInput(r,"*"),t.addOutput(r,"*")}n.forEach(({idx:s,link:r})=>{const i=t.graph.getNodeById(r.origin_id);i&&t.connect(s,i,r.origin_slot)}),t.setDirtyCanvas(!0)},setWidgets(t){const e=(n,s)=>{var i;const r=(i=t.widgets)==null?void 0:i.find(a=>a.name===n);r&&(r.value=s)};if(this.getByName(t,this.PROFILE.name)?e(this.PROFILE.name,t.properties[this.PROFILE.name]):t.addWidget("text",this.PROFILE.name,t.properties[this.PROFILE.name],n=>this.setValue(t,this.PROFILE.name,n),{title:"Profile name for this bus"}),this.getByName(t,this.INPUTS.name))e(this.INPUTS.name,t.properties[this.INPUTS.name]);else{const n=Array.from({length:this.INPUTS.max-this.INPUTS.min+1},(s,r)=>r+this.INPUTS.min);t.addWidget("combo",this.INPUTS.name,t.properties[this.INPUTS.name],s=>this.setValue(t,this.INPUTS.name,s),{values:n,title:"Number of input/output pairs"})}this.getByName(t,this.CLEAN.name)||t.addWidget("toggle",this.CLEAN.name,this.CLEAN.default,()=>{try{g.clean(t)}catch(n){console.error("[AnyBus] clean toggle error",n)}},{title:"Clean and reset all connections"})},setValue(t,e,n,s=!1){var i;const r=t.properties[e];if(t.properties[e]=n,this.setWidgetValue(t,e,n),e===this.PROFILE.name?(this.updateNodeTitle(t),t.properties.prevProfileName=n):e===this.INPUTS.name&&r!==n&&this.updateNodeIO(t),(i=t.setDirtyCanvas)==null||i.call(t,!0,!0),s){notifyAnyBusChange();return}O(t)&&(A(t),B(t)),notifyAnyBusChange()}};p.ALLOWED_NODE_TYPE=[p.NAMESPACE+p.TYPE,...p.ALLOWED_REROUTE_TYPE,...p.ALLOWED_GETSET_TYPE];class g{static connectBus(e,n,s,r){var f,h,S,E,y,m,N;const i=p.PROFILE.name,a=(h=(f=e.properties)==null?void 0:f[i])!=null?h:p.PROFILE.default,c=(E=(S=s.properties)==null?void 0:S[i])!=null?E:p.PROFILE.default;if(!(a===p.PROFILE.default||a===c)){e.disconnectInput(n),(y=e.setDirtyCanvas)==null||y.call(e,!0,!0),notifyAnyBusChange();return}const l=p.INPUTS.name,o=(N=(m=s.properties)==null?void 0:m[l])!=null?N:p.INPUTS.default;p.setValue(e,l,o),B(e),notifyAnyBusChange()}static connectInput(e,n,s,r){var u,l,o,f;const i=(u=s.outputs)==null?void 0:u[r];if(!i)return;const a=(i.name||"").toLowerCase(),c=i.type||"*";(l=e.inputs)!=null&&l[n]&&(e.inputs[n].name=a||`* ${n.toString().padStart(2,"0")}`,e.inputs[n].type=c,(o=e.outputs)!=null&&o[n]&&(e.outputs[n].name=e.inputs[n].name,e.outputs[n].type=c)),(f=e.setDirtyCanvas)==null||f.call(e,!0,!0),O(e)&&B(e),notifyAnyBusChange()}static disConnectBus(e){var n;(n=e.setDirtyCanvas)==null||n.call(e,!0,!0),notifyAnyBusChange()}static disConnectInput(e,n){var s;(s=e.setDirtyCanvas)==null||s.call(e,!0,!0),notifyAnyBusChange()}static clean(e){var s,r,i,a,c;if(!(e!=null&&e.graph))return;let n=!1;if(((r=(s=e.inputs)==null?void 0:s[this.BUS_SLOT])==null?void 0:r.link)!=null){const u=I(e.graph,e.inputs[this.BUS_SLOT].link);if(u){const l=e.graph.getNodeById(u.origin_id);l&&(e.disconnectInput(this.BUS_SLOT),l.connect(this.BUS_SLOT,e,this.BUS_SLOT),n=!0)}}else for(let u=this.FIRST_INDEX;u<((a=(i=e.inputs)==null?void 0:i.length)!=null?a:0);u++){const l=e.inputs[u];if(l&&l.link!=null){const o=I(e.graph,l.link);if(o){const f=e.graph.getNodeById(o.origin_id);f&&(e.disconnectInput(u),f.connect(o.origin_slot,e,u),n=!0)}}}if(n){const u=" ... cleaned";e.title=e.title+u,(c=e.setDirtyCanvas)==null||c.call(e,!0,!0),setTimeout(()=>{var l;e.title=e.title.replace(u,""),(l=e.setDirtyCanvas)==null||l.call(e,!0,!0)},500),notifyAnyBusChange()}}}L(g,"TYPE",T),L(g,"BUS_SLOT",0),L(g,"FIRST_INDEX",1);const V=function(t){p.init(t),p.setWidgets(t),p.updateNodeIO(t),p.setWidgetValue(t,p.PROFILE.name,t.properties[p.PROFILE.name]),p.setWidgetValue(t,p.INPUTS.name,t.properties[p.INPUTS.name]),onNodeCreated==null||onNodeCreated.apply(t,arguments),t.serialize_widgets=!0,setAnyBusState(e=>({...e,init:!0}))},G=function(t,e,n,s,r,i){var a,c;if(t.graph){if(setAnyBusState(u=>({...u,input:{...u.input,index:n+1-g.FIRST_INDEX}})),s&&r){const u=t.graph.getNodeById(r.origin_id);u&&(n===g.BUS_SLOT?u.type===T&&r.origin_slot===g.BUS_SLOT?g.connectBus(t,n,u,r.origin_slot):t.disconnectInput(n):g.connectInput(t,n,u,r.origin_slot))}else s||(n===g.BUS_SLOT?g.disConnectBus(t):g.disConnectInput(t,n));n===g.BUS_SLOT&&((c=(a=t.inputs)==null?void 0:a[g.BUS_SLOT])==null?void 0:c.link)!=null&&A(t),notifyAnyBusChange(),onConnectionsChange==null||onConnectionsChange.apply(t,arguments)}};export{p as MaraScottAnyBusNodeWidget,g as MaraScottAnyBus_v2,G as MaraScott_onConnectionsChange,V as MaraScott_onNodeCreated};
