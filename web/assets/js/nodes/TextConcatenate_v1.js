window.marascott||(window.marascott={}),window.marascott.TextConcatenate_v1||(window.marascott.TextConcatenate_v1={init:!1});const t={INPUTS:{name:"Nb Inputs",default:2,min:2,max:24},setValueInputs(t,a,n){let s=0,o=n+e.FIRST_INDEX;if(t.inputs.length>o){s=t.inputs.length-o;for(let e=s;e>0;e--)t.removeInput(t.inputs.length-1)}if(t.inputs.length<o){s=o-t.inputs.length;for(let e=0;e<s;e++){const e="string "+(t.inputs.length+1).toString().padStart(2,"0"),a="STRING";t.addInput(e,a)}}},setValue(t,e,a){var n;const s=this.getByName(t,e);s.value=a,t.setProperty(e,null!=(n=s.value)?n:t.properties[e]),this.setValueInputs(t,e,a),t.setDirtyCanvas(!0)},setInputsSelect(t){var e;if(null==this.getByName(t,this.INPUTS.name)){let a=[];for(let t=this.INPUTS.min;t<=this.INPUTS.max;t++)a.push(t);t.addWidget("combo",this.INPUTS.name,null!=(e=t.properties[this.INPUTS.name])?e:this.INPUTS.default,(e,a,n,s,o)=>{this.setValue(t,this.INPUTS.name,e)},{values:a}),t.setProperty(this.INPUTS.name,this.INPUTS.default),this.setValue(t,this.INPUTS.name,this.INPUTS.default);for(let e=t.widgets.length-1;e>=0;e--)t.widgets[e].name.startsWith("string")&&(t.widgets.splice(e,1),t.widgets_values&&t.widgets_values.splice(e,1))}},getByName(t,e){var a;return null==(a=t.widgets)?void 0:a.find(t=>t.name===e)}},e={TYPE:"MaraScottTextConcatenate_v1",FIRST_INDEX:0,configure(t){t.shape=LiteGraph.CARD_SHAPE,t.color=LGraphCanvas.node_colors.green.color,t.bgcolor=LGraphCanvas.node_colors.green.bgcolor,t.size[0]=150},setWidgets(e){t.setInputsSelect(e)}},a={onNodeCreated(t){const a=t.prototype.onNodeCreated;t.prototype.onNodeCreated=function(){const t=a?a.apply(this,arguments):void 0;return e.configure(this),e.setWidgets(this),t}}},n={name:"Comfy.MaraScott.TextConcatenate_v1",loadedGraphNode(t,a){t.type==e.TYPE&&t.setProperty("uuid",t.id)},beforeRegisterNodeDef(t,n,s){n.name==e.TYPE&&a.onNodeCreated(t)},beforeConfigureGraph(t){window.marascott.TextConcatenate_v1.init=!1},afterConfigureGraph(t){window.marascott.TextConcatenate_v1.init=!0}};export{n as MaraScottTextConcatenate_v1NodeExtension};
