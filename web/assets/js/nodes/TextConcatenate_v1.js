window.marascott||(window.marascott={});window.marascott.TextConcatenate_v1||(window.marascott.TextConcatenate_v1={init:!1});const c={INPUTS:{name:"Nb Inputs",default:2,min:2,max:24},setValueInputs(t,a,s){let i=0,e=s+r.FIRST_INDEX;if(t.inputs.length>e){i=t.inputs.length-e;for(let n=i;n>0;n--)t.removeInput(t.inputs.length-1)}if(t.inputs.length<e){i=e-t.inputs.length;for(let n=0;n<i;n++){const o="string "+(t.inputs.length+1).toString().padStart(2,"0");t.addInput(o,"STRING")}}},setValue(t,a,s){var e;const i=this.getByName(t,a);i.value=s,t.setProperty(a,(e=i.value)!=null?e:t.properties[a]),this.setValueInputs(t,a,s),t.setDirtyCanvas(!0)},setInputsSelect(t){var s;if(this.getByName(t,this.INPUTS.name)==null){let i=[];for(let e=this.INPUTS.min;e<=this.INPUTS.max;e++)i.push(e);t.addWidget("combo",this.INPUTS.name,(s=t.properties[this.INPUTS.name])!=null?s:this.INPUTS.default,(e,n,o,p,u)=>{this.setValue(t,this.INPUTS.name,e)},{values:i}),t.setProperty(this.INPUTS.name,this.INPUTS.default),this.setValue(t,this.INPUTS.name,this.INPUTS.default);for(let e=t.widgets.length-1;e>=0;e--)t.widgets[e].name.startsWith("string")&&(t.widgets.splice(e,1),t.widgets_values&&t.widgets_values.splice(e,1))}},getByName(t,a){var s;return(s=t.widgets)==null?void 0:s.find(i=>i.name===a)}},r={TYPE:"MaraScottTextConcatenate_v1",FIRST_INDEX:0,configure(t){t.shape=LiteGraph.CARD_SHAPE,t.color=LGraphCanvas.node_colors.green.color,t.bgcolor=LGraphCanvas.node_colors.green.bgcolor,t.size[0]=150},setWidgets(t){c.setInputsSelect(t)}},l={onNodeCreated(t){const a=t.prototype.onNodeCreated;t.prototype.onNodeCreated=function(){const s=a?a.apply(this,arguments):void 0;return r.configure(this),r.setWidgets(this),s}}},h={name:"Comfy.MaraScott.TextConcatenate_v1",loadedGraphNode(t,a){t.type==r.TYPE&&t.setProperty("uuid",t.id)},beforeRegisterNodeDef(t,a,s){a.name==r.TYPE&&l.onNodeCreated(t)},beforeConfigureGraph(t){window.marascott.TextConcatenate_v1.init=!1},afterConfigureGraph(t){window.marascott.TextConcatenate_v1.init=!0}};export{h as MaraScottTextConcatenate_v1NodeExtension};
